<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd





  http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd">

    <cm:property-placeholder persistent-id="org.oasis_open.contextserver.persistence.elasticsearch"
                             update-strategy="reload" placeholder-prefix="${es.">
        <cm:default-properties>
            <cm:property name="cluster.name" value="contextElasticSearch"/>
            <cm:property name="index.name" value="context"/>
            <cm:property name="elasticSearchConfig" value="file:${karaf.etc}/elasticsearch.yml"/>
        </cm:default-properties>
    </cm:property-placeholder>

    <cm:property-placeholder persistent-id="org.oasis_open.contextserver.web"
                             update-strategy="reload" placeholder-prefix="${web.">
        <cm:default-properties>
            <cm:property name="contextserver.address" value="localhost"/>
            <cm:property name="contextserver.port" value="8181"/>
            <cm:property name="contextserver.secureAddress" value="localhost"/>
            <cm:property name="contextserver.securePort" value="9443"/>
        </cm:default-properties>
    </cm:property-placeholder>

    <service id="elasticSearchPersistenceService" ref="elasticSearchPersistenceServiceImpl">
        <interfaces>
            <value>org.oasis_open.contextserver.persistence.spi.PersistenceService</value>
            <value>org.oasis_open.contextserver.api.services.ClusterService</value>
        </interfaces>
    </service>

    <service
            interface="org.oasis_open.contextserver.persistence.elasticsearch.conditions.ConditionESQueryBuilder">
        <service-properties>
            <entry key="queryBuilderId" value="andConditionESQueryBuilder"/>
        </service-properties>
        <bean class="org.oasis_open.contextserver.persistence.elasticsearch.conditions.AndConditionESQueryBuilder"/>
    </service>

    <service
            interface="org.oasis_open.contextserver.persistence.elasticsearch.conditions.ConditionESQueryBuilder">
        <service-properties>
            <entry key="queryBuilderId" value="matchAllConditionESQueryBuilder"/>
        </service-properties>
        <bean class="org.oasis_open.contextserver.persistence.elasticsearch.conditions.MatchAllConditionESQueryBuilder"/>
    </service>

    <service
            interface="org.oasis_open.contextserver.persistence.elasticsearch.conditions.ConditionESQueryBuilder">
        <service-properties>
            <entry key="queryBuilderId" value="orConditionESQueryBuilder"/>
        </service-properties>
        <bean class="org.oasis_open.contextserver.persistence.elasticsearch.conditions.OrConditionESQueryBuilder"/>
    </service>

    <service
            interface="org.oasis_open.contextserver.persistence.elasticsearch.conditions.ConditionESQueryBuilder">
        <service-properties>
            <entry key="queryBuilderId" value="pastEventConditionESQueryBuilder"/>
        </service-properties>
        <bean class="org.oasis_open.contextserver.persistence.elasticsearch.conditions.PastEventConditionESQueryBuilder"/>
    </service>

    <service
            interface="org.oasis_open.contextserver.persistence.elasticsearch.conditions.ConditionESQueryBuilder">
        <service-properties>
            <entry key="queryBuilderId" value="pageViewEventConditionESQueryBuilder"/>
        </service-properties>
        <bean class="org.oasis_open.contextserver.persistence.elasticsearch.conditions.PageViewEventConditionESQueryBuilder"/>
    </service>

    <service
            interface="org.oasis_open.contextserver.persistence.elasticsearch.conditions.ConditionESQueryBuilder">
        <service-properties>
            <entry key="queryBuilderId" value="propertyConditionESQueryBuilder"/>
        </service-properties>
        <bean class="org.oasis_open.contextserver.persistence.elasticsearch.conditions.PropertyConditionESQueryBuilder"/>
    </service>

    <service
            interface="org.oasis_open.contextserver.persistence.elasticsearch.conditions.ConditionESQueryBuilder">
        <service-properties>
            <entry key="queryBuilderId" value="multipleValuesPropertyMatchConditionESQueryBuilder"/>
        </service-properties>
        <bean class="org.oasis_open.contextserver.persistence.elasticsearch.conditions.MultipleValuesPropertyMatchConditionESQueryBuilder"/>
    </service>

    <service
            interface="org.oasis_open.contextserver.persistence.elasticsearch.conditions.ConditionESQueryBuilder">
        <service-properties>
            <entry key="queryBuilderId" value="sessionDurationConditionESQueryBuilder"/>
        </service-properties>
        <bean class="org.oasis_open.contextserver.persistence.elasticsearch.conditions.SessionDurationConditionESQueryBuilder"/>
    </service>

    <service
            interface="org.oasis_open.contextserver.persistence.elasticsearch.conditions.ConditionESQueryBuilder">
        <service-properties>
            <entry key="queryBuilderId" value="goalMatchConditionESQueryBuilder"/>
        </service-properties>
        <bean class="org.oasis_open.contextserver.persistence.elasticsearch.conditions.GoalMatchConditionESQueryBuilder"/>
    </service>

    <service
            interface="org.oasis_open.contextserver.persistence.elasticsearch.conditions.ConditionESQueryBuilder">
        <service-properties>
            <entry key="queryBuilderId" value="profileInterestConditionESQueryBuilder"/>
        </service-properties>
        <bean class="org.oasis_open.contextserver.persistence.elasticsearch.conditions.ProfileInterestConditionESQueryBuilder"/>
    </service>

    <service
            interface="org.oasis_open.contextserver.persistence.elasticsearch.conditions.ConditionESQueryBuilder">
        <service-properties>
            <entry key="queryBuilderId" value="geoLocationByPointSessionConditionESQueryBuilder"/>
        </service-properties>
        <bean class="org.oasis_open.contextserver.persistence.elasticsearch.conditions.GeoLocationByPointSessionConditionESQueryBuilder"/>
    </service>

    <bean id="conditionESQueryBuilderDispatcher"
          class="org.oasis_open.contextserver.persistence.elasticsearch.conditions.ConditionESQueryBuilderDispatcher">
        <property name="bundleContext" ref="blueprintBundleContext"/>
    </bean>


    <!-- Condition evaluators -->
    <service interface="org.oasis_open.contextserver.persistence.elasticsearch.conditions.ConditionEvaluator">
        <service-properties>
            <entry key="conditionEvaluatorId" value="andConditionEvaluator"/>
        </service-properties>
        <bean class="org.oasis_open.contextserver.persistence.elasticsearch.conditions.AndConditionEvaluator"/>
    </service>

    <service interface="org.oasis_open.contextserver.persistence.elasticsearch.conditions.ConditionEvaluator">
        <service-properties>
            <entry key="conditionEvaluatorId" value="orConditionEvaluator"/>
        </service-properties>
        <bean class="org.oasis_open.contextserver.persistence.elasticsearch.conditions.OrConditionEvaluator"/>
    </service>

    <service
            interface="org.oasis_open.contextserver.persistence.elasticsearch.conditions.ConditionEvaluator">
        <service-properties>
            <entry key="conditionEvaluatorId" value="pastEventConditionEvaluator"/>
        </service-properties>
        <bean class="org.oasis_open.contextserver.persistence.elasticsearch.conditions.PastEventConditionEvaluator">
            <property name="persistenceService" ref="elasticSearchPersistenceServiceImpl"/>
            <!--<property name="definitionsService" ref="definitionsService"/>-->
        </bean>
    </service>

    <service interface="org.oasis_open.contextserver.persistence.elasticsearch.conditions.ConditionEvaluator">
        <service-properties>
            <entry key="conditionEvaluatorId" value="propertyConditionEvaluator"/>
        </service-properties>
        <bean class="org.oasis_open.contextserver.persistence.elasticsearch.conditions.PropertyConditionEvaluator"/>
    </service>

    <service interface="org.oasis_open.contextserver.persistence.elasticsearch.conditions.ConditionEvaluator">
        <service-properties>
            <entry key="conditionEvaluatorId" value="matchAllConditionEvaluator"/>
        </service-properties>
        <bean class="org.oasis_open.contextserver.persistence.elasticsearch.conditions.MatchAllConditionEvaluator"/>
    </service>

    <service interface="org.oasis_open.contextserver.persistence.elasticsearch.conditions.ConditionEvaluator">
        <service-properties>
            <entry key="conditionEvaluatorId" value="multipleValuesPropertyMatchConditionEvaluator"/>
        </service-properties>
        <bean class="org.oasis_open.contextserver.persistence.elasticsearch.conditions.MultipleValuesPropertyMatchConditionEvaluator"/>
    </service>

    <service interface="org.oasis_open.contextserver.persistence.elasticsearch.conditions.ConditionEvaluator">
        <service-properties>
            <entry key="conditionEvaluatorId" value="geoLocationByPointSessionConditionEvaluator"/>
        </service-properties>
        <bean class="org.oasis_open.contextserver.persistence.elasticsearch.conditions.GeoLocationByPointSessionConditionEvaluator"/>
    </service>

    <bean id="conditionEvaluatorDispatcherImpl"
          class="org.oasis_open.contextserver.persistence.elasticsearch.conditions.ConditionEvaluatorDispatcher">
        <property name="bundleContext" ref="blueprintBundleContext"/>
    </bean>

    <bean id="elasticSearchPersistenceServiceImpl"
          class="org.oasis_open.contextserver.persistence.elasticsearch.ElasticSearchPersistenceServiceImpl"
          init-method="start"
          destroy-method="stop">
        <property name="bundleContext" ref="blueprintBundleContext"/>
        <property name="conditionEvaluatorDispatcher" ref="conditionEvaluatorDispatcherImpl"/>
        <property name="conditionESQueryBuilderDispatcher" ref="conditionESQueryBuilderDispatcher"/>
        <property name="clusterName" value="${es.cluster.name}"/>
        <property name="indexName" value="${es.index.name}"/>
        <property name="address" value="${web.contextserver.address}"/>
        <property name="port" value="${web.contextserver.port}"/>
        <property name="secureAddress" value="${web.contextserver.secureAddress}"/>
        <property name="securePort" value="${web.contextserver.securePort}"/>
        <property name="elasticSearchConfig" value="${es.elasticSearchConfig}"/>
        <property name="itemsDailyIndexed">
            <list>
                <value>event</value>
                <value>session</value>
            </list>
        </property>
        <property name="routingByType">
            <map>
            </map>
        </property>
    </bean>

</blueprint>
